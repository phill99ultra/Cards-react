{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","character","id","alt","name","email","CardList","characters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredCharacters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,UAAUC,GAA1C,0BAAsEC,IAAI,cAClF,6BAAKL,EAAMG,UAAUG,OACrB,4BAAIN,EAAMG,UAAUI,YCJnBC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,WAAWC,KAAI,SAAAP,GAAS,OAC9B,cAAC,EAAD,CAAyBA,UAAWA,GAAzBA,EAAUC,WCNxBO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBAAOZ,UAAU,SACba,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCwCPG,E,kDA1Cd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACZR,WAAa,GACbS,YAAa,IAJD,E,qDAOd,WAAqB,IAAD,OACnBC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,WAAYc,S,oBAE5C,WAAU,IAAD,SAC4BE,KAAKR,MAAjCR,EADA,EACAA,WAAYS,EADZ,EACYA,YACnBQ,EAAqBjB,EACnBkB,QAAO,SAAAxB,GAAS,OAAIA,EAAUG,KAAKsB,cAAcC,SAASX,EAAYY,wBACzE,OACC,sBAAK7B,UAAU,MAAf,UACC,oDACA,cAAC,EAAD,CACCW,YAAY,oBACZC,aAAc,SAAAkB,GAAC,OAAI,EAAKP,SAAS,CAACN,YAAca,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUxB,WAAYiB,W,GAxBRQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9c63396e.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nexport const Card = props => {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.character.id}?set=set2&size=180x180`} alt=\"character\"/>\n            <h2>{props.character.name}</h2>\n            <p>{props.character.email}</p>\n        </div>\n    )\n}","import React from 'react';\nimport {Card} from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {    \n    return(\n        <div className='card-list'>\n            {\n                props.characters.map(character => (\n                <Card key={character.id} character={character}/>\n                ))\n            }\n        </div>\n    )\n}","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n    return (\n        <input className='search'\n            type='search' \n            placeholder={placeholder} \n            onChange={handleChange}/>\n    )\n}\n\n","import {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component.jsx';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcharacters : [],\n\t\t\tsearchField: ''\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({characters: users}))\n\t}\n\trender() {\n\t\tconst { characters, searchField } = this.state,\n\t\t\tfilteredCharacters = characters\n\t\t\t\t.filter(character => character.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Strange Characters</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='search characters'\n\t\t\t\t\thandleChange={e => this.setState({searchField : e.target.value})}\n\t\t\t\t/>\t\t\t\t\n\t\t\t\t<CardList characters={filteredCharacters} />\t\t\n\t\t\t</div>\n      \t);\n\t}\n}\n\n// class App extends Component {\n// \tclickHandle = () => {\n// \t\tconsole.log('btn clicked')\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<button onClick={this.clickHandle}>Click</button>\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}